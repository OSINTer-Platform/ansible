- name: "Setting new root path for Elasticsearch"
  set_fact:
    elastic_dir: "{{ root_path }}/{{ elastic_root_path }}"
    current_elastic_dir: "{{ root_path }}/{{ elastic_root_path }}/{{ elastic_current_version }}"

- name: "Get the list of services"
  service_facts:

- name: "Stop the Elasticsearch service"
  systemd:
    name: "elasticsearch.service"
    state: "stopped"
  when: "'elasticsearch.service' in services"

- name: "Make sure the {{ elastic_user_group }} group is present"
  group:
      name: "{{ elastic_user_group }}"

- name: "Setup user for running Elasticsearch"
  user:
      name: "{{ elastic_user_name }}"
      group: "{{ elastic_user_group }}"
      create_home: false
      home: "{{ elastic_dir }}"
      shell: "{{ elastic_user_shell }}"
      password: "{{ elastic_user_password|password_hash('sha512') }}"

- name: "Create folder for holding the Elasticsearch files"
  file:
    path: "{{ elastic_dir }}"
    state: directory
    mode: 0740
    owner: "{{ elastic_user_name }}"
    group: "{{ elastic_user_group }}"

- name: "Download and extract Elasticsearch files"
  unarchive:
    src: "{{ elastic_install_url }}"
    dest: "{{ elastic_dir }}"
    remote_src: yes
    keep_newer: yes
    mode: 0740
    owner: "{{ elastic_user_name }}"
    group: "{{ elastic_user_group }}"
    list_files: yes
  register: elastic_archive_contents

- name: "Rename elasticsearch folder to \"{{ elastic_current_version }}\""
  command: "mv -f {{ elastic_archive_contents.dest }}/{{ elastic_archive_contents.files[0] }} {{ current_elastic_dir }}"
  args:
    removes: "{{ elastic_archive_contents.dest }}/{{ elastic_archive_contents.files[0] }}"
    creates: "{{ current_elastic_dir }}"

- name: "Install config file for elasticsearch"
  template:
    src: "elasticsearch.yml"
    dest: "{{ current_elastic_dir }}/config/"
    force: yes

- name: "Move config directory to elasticsearch root"
  command: "mv -f {{ current_elastic_dir }}/config {{ elastic_dir }}/config"
  args:
    removes: "{{ current_elastic_dir }}/config"
    creates: "{{ elastic_dir }}/config"

- name: Check if SELinux is present and enabled
  command: /usr/sbin/selinuxenabled
  ignore_errors: yes
  register: selinux_status

- name: "Apply new SELinux context for custom Elasticsearch bin directory to make it executable"
  command: chcon -Rv --type=bin_t "{{ current_elastic_dir }}/bin"
  when: selinux_status.rc == 0


- name: "Change vm.max_map_count"
  shell: "echo 'vm.max_map_count = 262144' >> /etc/sysctl.conf && sysctl -p"

- name: "Install service for running the Elasticsearch"
  template:
    src: "elasticsearch.service"
    dest: "/etc/systemd/system/"
    force: yes

- name: "Restart Elasticsearch service, also issue daemon-reload to pick up config changes"
  systemd:
    state: "restarted"
    enabled: yes
    daemon_reload: yes
    name: "elasticsearch.service"

- name: "Wait for Elasticsearch to come online again"
  wait_for:
    port: 9200

- name: "Wait to make sure Elasticsearch is properly initialized"
  pause:
    minutes: 1
