- name: Install cron package for handling the crontab
  package:
    name: "{{ cron_package }}"
    state: latest

- name: Start the newly installed cron daemon and enable it
  ansible.builtin.service:
    name: "{{ cron_daemon if cron_daemon is defined else cron_package }}"
    state: started
    enabled: yes


- name: Setup crontab for scraping
  ansible.builtin.cron:
    name: OSINTbackend scraping
    special_time: hourly
    job: 'cd {{ root_path }}/{{ dbserver_project_name }} && {{ dbserver_project_name }}env/bin/python3 -m scripts.scrapeAndStore >> ./logs/scrape.log 2>> ./logs/scrapeErrors.log && pg_dump -U reader -d osinter -t articles -t articles_id_seq > ./articles/database.sql'
  become: yes
  become_user: "{{ dbserver_user_name }}"
  become_method: "sudo"

- name: "Setup crontab for updating {{ lookup('vars', item + '_project_name') }}"
  ansible.builtin.cron:
    name: "Update {{ lookup('vars', item + '_project_name') }}"
    special_time: hourly
    job: 'for directory in "/" "/OSINTprofiles/" "/OSINTmodules"; do git -C "{{ root_path }}/{{ lookup("vars", item + "_project_name") }}$directory" pull origin master; done'
  become: yes
  become_user: "{{ lookup('vars', item + '_user_name') }}"
  become_method: "sudo"
  loop:
    - dbserver
    - webserver
