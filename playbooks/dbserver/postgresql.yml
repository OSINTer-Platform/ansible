- name: Installing postgresql
  package:
    name: postgresql
    state: latest

- name: Installing postgresql-server on RHEL Family OS
  yum:
    name: 'postgresql-server'
    state: latest
  when: ansible_os_family == "RedHat"

- name: Initializing the database cluster on RHEL Family OS
  shell: "postgresql-setup --initdb"
  when: ansible_os_family == "RedHat"
  ignore_errors: yes

- name: Initializing the database cluster on Archlinux
  shell: "initdb --locale=en_US.UTF-8 -E UTF8 -D {{ postgresql_data_dir }}"
  when: ansible_distribution == "Archlinux"
  become: true
  become_user: postgres
  become_method: "sudo"
  ignore_errors: yes

- name: Start and enable postgresql to generate the needed config files
  ansible.builtin.service:
    name: postgresql
    enabled: yes
    state: started

- name: Locating the pg_hba.conf file
  shell: "psql -c 'SHOW hba_file' |& grep -o '/.*/pg_hba.conf'"
  args:
    executable: /bin/bash
  register: pg_hba_file
  become: yes
  become_user: postgres

- name: Locating the postgresql.conf file
  shell: "psql -c 'SHOW config_file' |& grep -o '/.*/postgresql.conf'"
  args:
    executable: /bin/bash
  register: postgresql_conf
  become: yes
  become_user: postgres

- name: Installing the config file trusting the postgres DB user
  template:
    src: "{{ playbook_dir }}/../configFiles/postgres/trust.conf"
    dest: "{{ pg_hba_file.stdout }}"

- name: Installing the postgresql config file allowing scram-sha-256 hashed passwords
  template:
    src: "{{ playbook_dir }}/../configFiles/postgres/postgresql.conf"
    dest: "{{ postgresql_conf.stdout }}"

- name: Restart postgresql to pickup the new config file
  ansible.builtin.service:
    name: postgresql
    state: restarted
