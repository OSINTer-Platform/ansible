- name: Check if SELinux is present and enabled
  command: /usr/sbin/selinuxenabled
  ignore_errors: yes
  register: selinux_status

- name: "Apply new SELinux context for custom {{ project_name }} directory to make it accessible for nginx"
  command: chcon -Rv --type=httpd_sys_content_t "{{ project_path }}"
  when: selinux_status.rc == 0

- name: "Apply new SELinux context for custom {{ project_name }} directory to make it executable"
  command: chcon -Rv --type=bin_t "{{ project_path }}/{{ project_name }}env/bin"
  when: selinux_status.rc == 0

- name: Install nginx
  package:
    name: nginx
    state: latest

- name: Create the needed folders
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: root
    group: root
  with_items: ["/etc/nginx/sites-available", "/etc/nginx/sites-enabled"]

- name: Create main nginx config file
  template:
    src: "{{ playbook_dir }}/../configFiles/nginx/nginx.conf"
    dest: "/etc/nginx/nginx.conf"

- name: Create nginx vhost config file
  template:
    src: "{{ playbook_dir }}/../configFiles/nginx/{{ project_name }}Nginx.conf"
    dest: "/etc/nginx/sites-available/{{ project_name }}.conf"

- name: Create symlinks
  file: src=/etc/nginx/sites-available/{{ project_name }}.conf dest=/etc/nginx/sites-enabled/{{ project_name }}.conf state=link

- name: Remove default nginx vhost configuration
  file: path=/etc/nginx/sites-enabled/default state=absent

- name: Start/restart nginx to make sure it's running and has picked up new config files
  service:
    name: nginx
    state: restarted
