- name: Check if SELinux is present and enabled
  command: /usr/sbin/selinuxenabled
  ignore_errors: yes
  register: selinux_status

- name: "Apply new SELinux context for custom {{ project_name }} directory to make it accessible for nginx"
  command: chcon -Rv --type=httpd_sys_content_t "{{ project_path }}"
  when: selinux_status.rc == 0

- name: "Apply new SELinux context for the {{ project_name }} socket file to make it writeable for nginx"
  command: chcon -Rv --type=httpd_var_run_t "{{ project_path }}"
  when: selinux_status.rc == 0

- name: "Apply new SELinux context for custom {{ project_name }} directory to make it executable"
  command: chcon -Rv --type=bin_t "{{ project_path }}/{{ project_name }}env/bin"
  when: selinux_status.rc == 0

- name: "Restart the gunicorn {{ project_name }} service to have it work with the new security context"
  systemd:
    state: restarted
    name: "{{ project_name }}.service"
  become: yes
  become_user: root
