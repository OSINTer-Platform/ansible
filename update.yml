- name: Update elasticsearch
  hosts: elasticsearch_setup:elasticsearch_config
  become: true
  tasks:
    - name: Import general purpose variables
      include_vars: "vars/general.json"

    - name: Check if the current elasticsearch version is up to date
      stat:
        path: "{{ root_path }}/{{ elastic_root_path }}/{{ elastic_current_version }}"
      register: elastic_exists

    - name: Update Elasticsearch version
      include_role:
        name: elasticsearch_setup
      when: not elastic_exists.stat.exists


- name: Update backend
  hosts: backend
  tasks:
    - name: Import general purpose variables
      include_vars: "vars/general.json"

    - name: Update backend
      include_role:
        name: update
      vars:
        project_name: "{{ dbserver_project_name }}"
        user_name: "{{ dbserver_user_name }}"

- name: Update frontend
  hosts: frontend
  become: yes
  tasks:
    - name: Import general purpose variables
      include_vars: "vars/general.json"

    - name: Import general purpose variables
      include_vars: "vars/general.json"

    - name: Update API
      include_role:
        name: update
      vars:
        project_name: "{{ webserver_project_name }}"
        user_name: "{{ webserver_user_name }}"

    - name: "Update static frontend files for the webfrontend and blog"
      include_role:
        name: setup_static_from_release
      vars:
        static_project_name: "{{ item }}"
        project_path: "{{ root_path }}/{{ webserver_project_name }}"
        user_name: "{{ webserver_user_name }}"
        user_group: "{{ webserver_user_group }}"
      loop:
        - "webfrontend"
        - "blog"

    - name: Restart the webserver
      ansible.builtin.service:
        name: "OSINT{{ webserver_project_name }}.service"
        state: restarted
        enabled: yes
      become: yes
